 — охеренно важно для собеседований.
 
Коллекции — лучше массивов, потому что они динамические

interface Collection
add
addAll
get
remove
contains
retainAll
isempty
iterator — механизм обхода коллекций
toArray

ArrayList — по сути — динамический массивов
имеет capacity(емкость). В начале имеет размерность 10.
size — сколько элементов сейчас.

При превышении емкости, емкость увеличивается до  ((capacity*3)/2 )+1 с последующим копированием
Желательно предугадывать размер заранее, чтоб не было дорогого resize
Доступ по индексу — быстрый.
По ссылке — идет поиск(и он медленный)
trimToSize уменьшает количество занятой массивом памяти
https://habrahabr.ru/post/128269/

LinkedList — двусвязный список.
При добавлении по ссылке — довольно быстро.
Медленный доступ к произвольному элементу(кроме первого и последнего)
https://habrahabr.ru/post/127864/

Set — без повторов
HashSet — разделен на bucket'ы, все с похожими хэшами 
внутри бакета односвязаный список(если <8 элементов) или дерево
перед записью в бакет, хэш-код обрезается по принципу XOR c capacity(выделенной под это памятью, максимальное количество корзин, по умолчанию — 16, при ресайзе идет перестройка и увеличение в 2 раза) — так в HotSpot
есть LoadFactor, означает, какое соотношение между числом элементом и бакетов должно быть, чтоб начался ресайзе

Для элемента в бакете должен быть реализован Hash и equals
при добавлении ищем бакет с подходящими хэшами, потом внутри по хэшу, потом проверяем equals

HashMap
массив пар ключ/значение.
требования к hash: уникальный, как можно реже изменяемый, в идеале — immutable 
https://habrahabr.ru/post/128017/

TreeMap
в основе — красно-черное дерево(смотри тетрадь)


Vector
Потокобезопасный
может увеличиваться инкрементально


Queue — очередь, FIFO()
DEQUE — двусторонняя очередь

Stack — очевидно.

Concurrent HashMap — доступ к Hash
